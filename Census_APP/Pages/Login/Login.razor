@layout LoginLayout
@page "/"
@using Census_APP.Models;

<div class="row">
	<div class="col-lg-8">
		<h1 class="mb-5">Login</h1>
	</div>

	<div class="row mb-3">
		<label class="col-md-4 col-form-label">Email</label>
		<div class="col-md-8">
			<input type="text" class="form-control" @bind="loginData.Email">
		</div>
	</div>

	<div class="row mb-3">
		<label class="col-md-4 col-form-label">Password</label>
		<div class="col-md-8">
			<input type="text" class="form-control" @bind="loginData.Password">
			<span class="text-danger">@Errors["address"]?[0]</span>
		</div>
	</div>


	<div class="row">
		<div class="offset-md-4 col-md-4 d-grid">
			<button class="btn btn-primary" @onclick="LoginAdministrator">Login</button>
		</div>
		<div class="offset-md-4 col-md-4 d-grid">
			<a href="/Household" class="btn btn-danger">Cancel</a>
		</div>
	</div>
</div>

@inject HttpClient Http
@inject NavigationManager navManager
@using System.Text.Json.Nodes
@using System.Net.Http.Json;
@using Microsoft.AspNetCore.Components.Forms
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@code {

	public LoginDTO loginData { set; get; } = new();
	public JsonNode Errors { set; get; } = new JsonObject();

	protected async Task LoginAdministrator()
	{

		var response = await Http.PostAsJsonAsync("http://localhost:5277/API/auth/login", loginData);

		if (response.IsSuccessStatusCode)
		{
			var result = await response.Content.ReadFromJsonAsync<LoginResponse>();
			await sessionStorage.SetItemAsync("adminID", result.AdminID);

			navManager.NavigateTo("/Dashboard");
		}
		else
		{
			var strResponse = await response.Content.ReadAsStringAsync();
			Console.WriteLine("JSON Response: \n" + strResponse);
			try
			{
				var jsonResponse = JsonNode.Parse(strResponse);
				Errors = jsonResponse?["errors"] ?? new JsonObject();
			}
			catch (Exception ex)
			{
				Console.WriteLine($"Error parsing response: {ex.Message}");
			}
		}
	}

}
